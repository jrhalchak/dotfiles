include ./tokyo-night-kitty.conf

tab_bar_min_tabs            1
tab_bar_edge                bottom
tab_bar_style               powerline
tab_powerline_style         slanted
# tab_title_template          {title}{' :{}:'.format(num_windows) if num_windows > 1 else ''}
hide_window_decorations titlebar-only

font_family                 VictorMono Nerd Font Mono SemiBold
bold_font                   VictorMono Nerd Font Mono Bold
italic_font                 VictorMono Nerd Font Mono Italic
bold_italic_font            VictorMono Nerd Font Mono Bold Italic

# font_family      family="VictorMono Nerd Font Mono"
# bold_font        auto
# italic_font      auto
# bold_italic_font auto

font_size                  11.0
disable_ligatures          cursor
font_features              +liga
shell                      zsh
# adjust_line_height       -5

window_padding_width       10
placement_strategy         center
background_opacity         0.95
background_blur            50

# Vim-like Pane Navigation

# For `<ctrl-h>`, `<ctrl-j>`, `<ctrl-k>`, `<ctrl-l>` to between Kitty
# splits, **unless** Neovim is running and can handle the split movement
# itself.
#
# Kitty supports this via the `send_text` action, which can send keypresses to
# the running program, or you can use the `neighboring_window` action directly.
# But to avoid interfering with Neovim's own split navigation, you should only
# let Kitty handle the key if Neovim can't.
#
# Kitty has a built-in feature for this: [Kitty's remote control and
# kitten](https://sw.kovidgoyal.net/kitty/kittens/pass_keys/) called
# `pass_keys`. This allows you to pass the key to the application (Neovim) if
# it can handle it, otherwise let Kitty handle it.
#
# TODO: See [vim-kity-navigator](https://github.com/knubie/vim-kitty-navigator/tree/master)
# and the related nvim plugin

# map ctrl+h pass_keys neighboring_window left
# map ctrl+j pass_keys neighboring_window bottom
# map ctrl+k pass_keys neighboring_window top
# map ctrl+l pass_keys neighboring_window right

# Aerospace keybinds
map cmd+alt+t no_op
map cmd+h no_op
map cmd+j no_op
map cmd+k no_op
map cmd+l no_op
map cmd+shift+h no_op
map cmd+shift+j no_op
map cmd+shift+k no_op
map cmd+shift+l no_op
map cmd+alt+h no_op
map cmd+alt+v no_op
map cmd+shift+m no_op
map cmd+shift+enter no_op
map cmd+shift+minus no_op
map cmd+shift+equal no_op
map cmd+shift+v no_op
map cmd+shift+s no_op
map cmd+shift+t no_op
map cmd+shift+f no_op
map cmd+r no_op
map cmd+shift+r no_op
map cmd+1 no_op
map cmd+2 no_op
map cmd+3 no_op
map cmd+4 no_op
map cmd+5 no_op
map cmd+6 no_op
map cmd+7 no_op
map cmd+8 no_op
map cmd+9 no_op
map cmd+0 no_op
map cmd+shift+1 no_op
map cmd+shift+2 no_op
map cmd+shift+3 no_op
map cmd+shift+4 no_op
map cmd+shift+5 no_op
map cmd+shift+6 no_op
map cmd+shift+7 no_op
map cmd+shift+8 no_op
map cmd+shift+9 no_op
map cmd+shift+0 no_op
